{"version":3,"sources":["components/StyledButton/button.module.css","components/Toggle/toggle.js","components/Button/Button.jsx","components/StyledButton/Button.js","components/ToggleSwitch/ToggleSwitch.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ToggleSwitch","useState","on","setOnState","className","onClick","o","Button","title","type","styles","disabled","props","dynamicClassName","includes","getClassName","style","PropTypes","string","func","object","bool","defaultProps","ButtonCreative","btnStyle","children","btnColor","labelColor","hover","setHover","toggleHover","commonStyles","backgroundColor","color","outlineStyles","border","outlineHoverStyle","roundedStyle","borderRadius","disabledStyle","cursor","opacity","width","margin","onMouseEnter","onMouseLeave","btn","ToggleSwitch2","id","name","checked","onChange","optionLabels","small","e","target","htmlFor","tabIndex","onKeyDown","keyCode","preventDefault","handleKeyPress","App","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03acf272.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button_btn__2USfj\"};","import { useState } from \"react\"\nimport './toggle.css'\n\nconst ToggleSwitch = () => {\n   \n    const [on, setOnState] = useState(false);\n    const toggle = () => setOnState(o => !o);\n    return (\n        <div className=\"toggle\">\n        <button className={on ? 'on' : 'off'} onClick={toggle}>\n        <span className=\"pin\" />\n        </button>\n        {on ? \"SwitchedOn\" : \"SwitchedOff\"}\n        </div>\n  );\n}\n\n  export default ToggleSwitch;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.styles.scss';\n\nconst Button = ({\n\ttitle,\n\ttype,\n\tonClick,\n\tstyles,\n\tclassName,\n\tdisabled,\n\t...props\n}) => {\n\tconst getClassName = () => {\n\t\tlet dynamicClassName = `button button-${\n\t\t\tdisabled && !type.includes('disabled') ? type + '-disabled' : type\n\t\t}`;\n\t\tif (className) {\n\t\t\tdynamicClassName += ` ${className}`;\n\t\t}\n\t\treturn dynamicClassName;\n\t};\n\treturn (\n\t\t<button\n\t\t\tclassName={getClassName()}\n\t\t\tstyle={styles}\n\t\t\tdisabled={disabled}\n\t\t\tonClick={onClick}\n\t\t\t{...props}>\n\t\t\t{title}\n\t\t</button>\n\t);\n};\n\nPropTypes.Button = {\n\ttitle: PropTypes.string,\n\tonClick: PropTypes.func,\n\tstyles: PropTypes.object,\n\tclassName: PropTypes.string,\n\tdisabled: PropTypes.bool\n};\n\nButton.defaultProps = {\n\ttitle: 'Button',\n\ttype: '',\n\tdisabled: false\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport styles from './button.module.css';\n\nconst ButtonCreative = ({ children, onClick, btnColor = 'teal', labelColor, disabled, type, style, ...props }) => {\n\tconst [\n\t\thover,\n\t\tsetHover\n\t] = useState(false);\n\tconst toggleHover = () => {\n\t\tsetHover(!hover);\n\t};\n\tconst commonStyles = {\n\t\tbackgroundColor : btnColor,\n\t\tcolor           : labelColor || 'white'\n\t};\n\tconst outlineStyles = {\n\t\tborder          : `1px solid ${btnColor}`,\n\t\tcolor           : btnColor,\n\t\tbackgroundColor : 'white'\n\t};\n\tconst outlineHoverStyle = {\n\t\tcolor           : labelColor || 'white',\n\t\tbackgroundColor : btnColor\n\t};\n\n\tconst roundedStyle = {\n\t\tbackgroundColor : btnColor,\n\t\tcolor           : labelColor || 'white',\n\t\tborderRadius    : '25px'\n\t};\n\tconst disabledStyle = {\n\t\tcursor          : 'default',\n\t\tbackgroundColor : btnColor,\n\t\tcolor           : labelColor || 'white',\n\t\topacity         : 0.4\n\t};\n\tconst blockStyles = {\n\t\twidth  : '95%',\n\t\tmargin : '0 auto'\n\t};\n\tlet btnStyle;\n\tswitch (type) {\n\t\tcase 'rounded':\n\t\t\tbtnStyle = roundedStyle;\n\t\t\tbreak;\n\t\tcase 'block':\n\t\t\tbtnStyle = blockStyles;\n\t\t\tbreak;\n\t\tcase 'outline':\n\t\t\tif (hover) {\n\t\t\t\tbtnStyle = outlineHoverStyle;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtnStyle = outlineStyles;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbtnStyle = {\n\t\t\t\tbackgroundColor : btnColor,\n\t\t\t\tcolor           : labelColor || 'white'\n\t\t\t};\n\t\t\tbreak;\n\t}\n\treturn (\n\t\t<button\n\t\t\tstyle={\n\n\t\t\t\t\tdisabled ? { ...commonStyles, ...btnStyle, ...disabledStyle, ...style } :\n\t\t\t\t\t{ ...commonStyles, ...btnStyle, ...style }\n\t\t\t}\n\t\t\tonMouseEnter={toggleHover}\n\t\t\tonMouseLeave={toggleHover}\n\t\t\t{...props}\n\t\t\ttype=\"button\"\n\t\t\tonClick={\n\n\t\t\t\t\t!disabled ? onClick :\n\t\t\t\t\t() => {}\n\t\t\t}\n\t\t\tclassName={styles.btn}\n\t\t>\n\t\t\t{children || 'button'}\n\t\t</button>\n\t);\n};\n\nexport default ButtonCreative;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './ToggleSwitch.css';\n\nconst ToggleSwitch2 = ({ id, name, checked, onChange, optionLabels, small, disabled }) => {\n  function handleKeyPress(e){\n    if (e.keyCode !== 32) return;\n\n    e.preventDefault();\n    onChange(!checked)\n  }\n\n  return (\n    <div className={\"toggle-switch\" + (small ? \" small-switch\" : \"\")}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        className=\"toggle-switch-checkbox\"\n        id={id}\n        checked={checked}\n        onChange={e => onChange(e.target.checked)}\n        disabled={disabled}\n        />\n        {id ? (\n          <label className=\"toggle-switch-label\"\n                 htmlFor={id}\n                 tabIndex={ disabled ? -1 : 1 }\n                 onKeyDown={ (e) => { handleKeyPress(e) }}>\n            <span\n              className={\n                disabled\n                  ? \"toggle-switch-inner toggle-switch-disabled\"\n                  : \"toggle-switch-inner\"\n              }\n              data-yes={optionLabels[0]}\n              data-no={optionLabels[1]}\n              tabIndex={-1}\n            />\n            <span\n              className={\n              disabled\n                ? \"toggle-switch-switch toggle-switch-disabled\"\n                : \"toggle-switch-switch\"\n              }\n              tabIndex={-1}\n            />\n          </label>\n        ) : null}\n      </div>\n    );\n}\n\n// Set optionLabels for rendering.\nToggleSwitch2.defaultProps = {\n  optionLabels: [\"Yes\", \"No\"],\n};\n\nToggleSwitch2.propTypes = {\n  id: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  optionLabels: PropTypes.array,\n  small: PropTypes.bool,\n  disabled: PropTypes.bool\n};\n\nexport default ToggleSwitch2;","import React from \"react\";\nimport \"./App.css\";\nimport ToggleSwitch from \"./components/Toggle/toggle\";\nimport Button from \"./components/Button/Button\";\nimport ButtonCreative from \"./components/StyledButton/Button\";\nimport ToggleSwitch2 from \"./components/ToggleSwitch/ToggleSwitch\"\n\nfunction App() {\n  return (\n    <div>\n      <h1>Components showcase</h1>\n      <Button title=\"Click me\" />\n      <ToggleSwitch />\n      <ButtonCreative children=\"New Button\" />\n      <ButtonCreative btnColor=\"blue\" type=\"outline\">\n        Outline Button\n      </ButtonCreative>\n\n      <ToggleSwitch2 id=\"a02\" name=\"Toggle\" onChange={e => console.log(\"onToggle\")}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}